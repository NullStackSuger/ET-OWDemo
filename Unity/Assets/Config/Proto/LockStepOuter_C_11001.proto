syntax = "proto3";
package ET;

// ResponseType G2C_Match
message C2G_Match // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_Match // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

/// 匹配成功，通知客户端切换场景
message Match2G_NotifyMatchSuccess // IMessage
{
	int32 RpcId = 1;
	/// 房间的ActorId
	ActorId ActorId = 2;
}

/// 客户端通知房间切换场景完成
message C2Room_ChangeSceneFinish // IRoomMessage
{
	int64 PlayerId = 1;
}

message LockStepUnitInfo
{
	int64 PlayerId = 1;
	TrueSync.TSVector Position = 2;
	TrueSync.TSQuaternion Rotation = 3;
	int32 ActionGroup = 4;
}

/// 房间通知客户端进入战斗
message Room2C_Start // IMessage
{
	int64 StartTime = 1;
	repeated LockStepUnitInfo UnitInfo = 2;
}

message FrameMessage // IMessage
{
	int32 Frame = 1;
	int64 PlayerId = 2;
	LSInput Input = 3;
}

message OneFrameInputs // IMessage
{
	map<int64, LSInput> Inputs = 2;
}

message Room2C_AdjustUpdateTime // IMessage
{
	int32 DiffTime = 1;
}

message C2Room_CheckHash // IRoomMessage
{
	int64 PlayerId = 1;
	int32 Frame = 2;
	int64 Hash = 3;
}

message Room2C_CheckHashFail // IMessage
{
	int32 Frame = 1;
	bytes LSWorldBytes = 2;
}

message G2C_Reconnect // IMessage
{
	int64 StartTime = 1;
	repeated LockStepUnitInfo UnitInfos = 2;
	int32 Frame = 3;
}

//------------------------------------------------------------------------------------------------

message S2C_UnitChangePosition // IMessage
{
	int64 UnitId = 1;
	TSVector OldPosition = 2;
	TSVector NewPosition = 3;
}

message S2C_UnitChangeRotation // IMessage
{
	int64 UnitId = 1;
	TSQuaternion OldRotation = 2;
	TSQuaternion NewRotation = 3;
}

message S2C_UnitUseCast // IMessage
{
	int64 UnitId = 1;
	int32 CastConfigId = 2;
	int64 CastUnitId = 3;
}

message S2C_UnitRemoveCast // IMessage
{
	int64 UnitId = 1;
	int64 CastUnitId = 2;
}